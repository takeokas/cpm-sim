
		cpm インストールガイド

					1998/Jul/03 竹岡尚三 www.takeoka.org/~take/


 1. Make する前に

 1) Endian の確認

  自分のマシンが BIG_ENDIAN か、LITTLE_ENDIAN かを確認して、どちらかを
  -D で指定して下さい。
	B_ENDIAN    は 680x0, Sparc
	L_ENDIAN は VAX, 32x32, 80x86, 8080
  です。


 2) 機械語モニターで、トレース機能を使うか否か

  機械語モニターでトレースを使いたい人は -DTRACE としておいて下さい。
ただし、トレース可能にすると、Break Point と Trace Flagのチェックが入り、オーバーヘッド多少増えます。


 3) パリティ・フラグの機能を使うか否か

  Parity Flag を使いたい人は、-DPARITY として下さい。パリティ・フラグはpswのpush,pop に、オーバーヘッドを増やします。CP/M 下で稼働するアプリケーションのほとんどは、i8080,Z80自動判定の用途以外、パリティ・フラグを使用しません。

 4) GetString のキーバインド設定

  BDOS Function#10 の行編集機能のキーバインドを指定できます。
  キーバインドを、次のように指定してください。
	-DEMACS	   : Emacs 風
	-DWORDSTAR : WordStar 風
	-DCPM3	   : CP/M3 風



 2.システムの動かし方

 1) 展開したディレクトリで
	% make
   とすれば、cpm ができる。

 2) BIOSは既に用意してあるので("bios64.sys")、御心配なく。

 3) 試験的に動かすには、makeしたディレクトリで

	% cpm -b bios64.sys -f xconf

    とすれば、cpmが起動します。
    終了は
	A> unix
    です。

 4) コンフィギュレーション・ファイル「cpmconf」のドライブのパスを、適当に設定して下さい。


 5) 本格的にインストールするには、rootになって、
	# make install
    とします。
    各ファイルが
	cpm	: /usr/local/bin/
	cpmconf : /usr/local/lib/
	bios64.sys : /usr/local/lib/
    コピーされます。

 6) 以降
	% cpm
   とやれば、CP/M が起動する筈です。

 7) 開発に使用する言語やプロジェクトごとにコンフィギュレーション・ファイルを作って、cpm起動時に「-f」オプションでそれを指定すると、かなり便利です。
   (ドライブ指定は必ずフルパスで書いて下さい)


 8) 環境変数 CPM_CONFIG でコンフィギュレーション・ファイルを指定することもできます。




 3.移植性について

  高速化のためにセコイ技を使い若干移植性を損ねていますが、現存する 16/32 bit のプロセッサなら大抵動くように作ってあります。
  また BIG_ENDIAN でも、 LITTLE_ENDIAN でも、動くように作ってありますから、コンパイル時に Makefile 中で指定して下さい。

  旨く動作しない時は BYTE,BYTE2,BYTE4 の typedef を確認して下さい。
  (確認して、絶望する事になっても私は関知しませんが… :-)

  では、CP/M を愛用して下さい。

			竹岡尚三

