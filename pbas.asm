;
;	PALO ALTO TINY BASIC
;		original	by Dr.WANG
;		for CP/M 2.2	by S.TAKEOKA
;
back$spc	equ	8
;
BOOT	EQU	0
BDOS	EQU	BOOT+5
TPA	EQU	100H
VTOP	EQU	6F00H	;VARIABLE TOP ADRS
MSTK	EQU	7000H
STACK	EQU	8000H
;
	ORG	TPA
;
	LXI	SP,STACK
	lxi	h,otop		;new text
	shld	obtm
	CALL	INIT
;
START:	;DI		;RESTART FROM ERR
	LXI	SP,STACK
	JMP   	ENTRY
;
COMPR:	MOV	A,H		;COMPAIR DE,HL
	CMP	D
	RNZ
	MOV	A,L
	CMP	E
	RET
;
SKPBL:	LDAX	D
	CPI	' '
	RNZ
	INX	D
	jmp	skpbl
	RET
;
;
TSTV:	CALL	SKPBL	;TEST VARIABLE
	SUI	'@'
	RC
	JNZ	TSTV1
	INX	D
	CALL	EXPR0
	DAD	H
	JC	ERROR
	PUSH	D
	XCHG
	CALL	RSIZE
	CALL	COMPR
	JC	SYSO1
	LXI 	H,VTOP
	CALL	DIFF
	POP	D
	RET
;
TSTV1:	CPI	'Z'-'@'+1	;'@' TO 'Z' ?
	CMC
	RC
	INX	D
	LXI	H,VTOP
	RLC
	ADD	L
	MOV	L,A
	MVI	A,0
	ADC	H
	MOV	H,A
	RET
;
TEST:	XTHL		;TEST CHARACTOR
	CALL   	SKPBL
	CMP M
TEST1:	INX	H
	JZ	TSTEQ
	PUSH	B
	MOV	C,M	;FETCH SKIP NUM.
	MVI	B,0
	DAD	B
	POP	B
	DCX	D
TSTEQ:	INX	D
	INX	H
	XTHL
	RET
;
GINT:	LXI	H,0	;GET INTEGER
	MOV	B,H
	CALL	SKPBL
GETI1:	CPI	'0'
	RC		;NOT NUM THEN RET
	CPI	'9'+1
	RNC
	MVI	A,0F0H
	ANA	H
	JNZ	ERROR
	INR	B
	PUSH	B
	MOV	B,H
	MOV	C,L
	DAD	H
	DAD	H
	DAD	B
	DAD	H
	LDAX	D
	INX	D
	ANI	0FH
	ADD	L
	MOV	L,A
	MVI	A,0
	ADC	H
	MOV	H,A
	POP	B
	LDAX	D
	JP	GETI1
;
ERROR:	PUSH	D
ERR1:	LXI	D,HOWMS
	JMP	LEMS1
;
HOWMS:	DB	'HOW?'
	DB	0DH
OKMES:	DB	'OK'
	DB	0DH
WHTMS	DB	'WHAT?'
	DB	0DH
SRYMS:	DB	'SORRY'
	DB	0DH
;
ENTRY:	CALL	CRLF
	LXI	D,OKMES
	XRA	A
	CALL	MSG
	LXI	H,ST2+1
	SHLD	COBJ
ST2:	LXI	H,0
	SHLD	FCNTR
	SHLD	RSTCK
;
GETC:	MVI	A,'>'	;PROMPT
	CALL	GETL
	PUSH	D
	LXI	D,LBUF
	CALL	GINT
	CALL	SKPBL
	MOV	A,H
	ORA	L
	STA	DRCT
	POP	B	;BC:=END OF LINE
	JZ	KWCPR	;LINE NO.=0 THEN CMD
INSRT:	DCX	D
	MOV	A,H
	STAX	D
	DCX	D
	MOV	A,L
	STAX	D
	PUSH	B	;SAVE L END
	PUSH	D	;SAVE L TOP
	MOV	A,C
	SUB	E
	PUSH	PSW	;SAVE L LEN
	CALL	SRCH
	PUSH	D	;SAVE CURRENT LINE
	JNZ	MOVE
	PUSH	D	;EXIST SAME LINE
	CALL	SKIPL
	POP	B
	LHLD	OBTM
	CALL	TRNSF	;ERASE OLD LINE
	MOV	H,B
	MOV	L,C
	SHLD	OBTM	;UPDATE OBTM
;
MOVE:	POP	B	;BC:=CURRENT LINE
	LHLD	OBTM
	POP	PSW	;L LEN
	PUSH	H	;SAVE CURRENT OBTM
	CPI	3
	JZ	START	;3=LNO.&CR
	ADD	L	;CULC MOV.BTTM
	MOV	L,A
	MVI	A,0
	ADC	H
	MOV	H,A
	LXI	D,VTOP
	CALL	COMPR
	JNC	SYSOF
	SHLD	OBTM
	POP	D	;POP CURRENT BTTM
	CALL	TR2	;MOV FOR INSERTION
	POP	D	;POP L TOP
	POP	H	;POP L END
	CALL	TRNSF
	JMP	GETC
;
CMDKW:	DB 'LIST'
	DB	(LIST SHR 8) OR 80H
	DB	LIST AND 0FFH
	DB 'RUN'
	DB	(RUN SHR 8) OR 80H
	DB	RUN AND 0FFH
	DB 'NEW'
	DB	(NEW SHR 8) OR 80H
	DB	NEW AND 0FFH
	DB 'SYSTEM'
	DB	(BOOT SHR 8)OR 80H
	DB	BOOT AND 0FFH
STMKW:	DB 'NEXT'
	DB	(NEXT SHR 8) OR 80H
	DB	NEXT AND 0FFH
	DB 'LET'
	DB	(LET SHR 8) OR 80H
	DB	LET AND 0FFH
	DB 'IF'
	DB	(IFSTM SHR 8) OR 80H
	DB	IFSTM AND 0FFH
	DB 'GOTO'
	DB	(GOTO SHR 8) OR 80H
	DB	GOTO AND 0FFH
	DB 'GOSUB'
	DB	(GOSUB SHR 8) OR 80H
	DB	GOSUB AND 0FFH
	DB 'RETURN'
	DB	(RETURN SHR 8) OR 80H
	DB	RETURN AND 0FFH
	DB 'REM'
	DB	(REM SHR 8)OR 80H
	DB	REM AND 0FFH
	DB 'FOR'
	DB	(FOR SHR 8)OR 80H
	DB	FOR AND 0FFH
	DB 'INPUT'
	DB	(INPUT SHR 8)OR 80H
	DB	INPUT AND 0FFH
	DB 'PRINT'
	DB	(PRINT SHR 8)OR 80H
	DB	PRINT AND 0FFH
	DB '?'
	DB	(PRINT SHR 8)OR 80H
	DB	PRINT AND 0FFH
	DB 'STOP'
	DB	(STOP SHR 8)OR 80H
	DB	STOP AND 0FFH
;
	DB	(CMDER SHR 8)OR 80H
	DB	CMDER AND 0FFH
;
FNKW:
	DB 'RND'
	DB	(RND SHR 8)OR 80H
	DB	RND AND 0FFH
	DB 'ABS'
	DB	(FNABS SHR 8)OR 80H
	DB	FNABS AND 0FFH
	DB 'SIZE'
	DB	(RSIZE SHR 8)OR 80H
	DB	RSIZE AND 0FFH
;
	DB	(FACT2 SHR 8)OR 80H
	DB	FACT2 AND 0FFH
;
KWTO:	DB 'TO'
	DB	(FORTO SHR 8)OR 80H
	DB	FORTO AND 0FFH
	DB	(LERMS SHR 8)OR 80H
	DB	LERMS AND 0FFH
KWSTP:	DB 'STEP'
	DB	(FSTEP SHR 8) OR 80H
	DB	FSTEP AND 0FFH
	DB	(FSTP1 SHR 8) OR 80H
	DB	FSTP1 AND 0FFH
;
ROPKW:
	DB '>='
	DB	(OGE SHR 8)OR 80H
	DB	OGE AND 0FFH
	DB '#'
	DB	(ONE SHR 8)OR 80H
	DB	ONE AND 0FFH
	DB '>'
	DB	(OGT SHR 8)OR 80H
	DB	OGT AND 0FFH
	DB '='
	DB	(OEQ SHR 8)OR 80H
	DB	OEQ AND 0FFH
	DB '<='
	DB	(OLE SHR 8)OR 80H
	DB	OLE AND 0FFH
	DB '<'
	DB	(OLT SHR 8)OR 80H
	DB	OLT AND 0FFH
	DB	(NOROP SHR 8)OR 80H
	DB	NOROP AND 0FFH
;
KWCPR:	LXI	H,CMDKW-1
	CALL	SKPBL
NXTKW:	PUSH	D	;SAVE L TOP
KWC1:	LDAX	D
	INX	D
	CPI	'.'
	JZ	MATKW
	INX	H
	CMP	M
	JZ	KWC1
	MVI	A,7FH
	DCX	D
	CMP	M
	JC	EXEQT	;MATCH FULL SPELL
KWSK1:	INX	H
	CMP	M
	JNC	KWSK1
	INX	H
	POP	D	;POP L TOP
	JMP	NXTKW
MATKW:	MVI	A,7FH
KWSK2:	INX	H
	CMP	M
	JNC	KWSK2
EXEQT:	CALL	SKPBL
	MOV	A,M	;FETCH EXEC ADRS
	INX	H
	MOV	L,M
	ANI	7FH
	MOV	H,A
	POP	PSW	;DUMMY POP
	PCHL
;
NEW:	CALL	TSCR2
	LXI	H,OTOP
	SHLD	OBTM
STOP:	CALL	TSCR2
	JMP	START
;
RUN:	CALL	TSCR2
	LXI	D,OTOP
;
RUN1:	LXI	H,0
	CALL	SRCH1	;SRCH MIN-LABEL
	JC	START
;
RUN2:	MVI	A,0FFH
	STA	DRCT	;NOT DIRECT MODE
	XCHG
	SHLD	COBJ
	XCHG
	INX	D
	INX	D
;
NXTGO:	CALL	BREAK
	LXI	H,STMKW-1
	JMP	NXTKW
;
GOTO:	CALL	EEXPR
	PUSH	D
	CALL	TSCR2
	CALL	SRCH
	JNZ	ERR1
	POP	PSW	;DMY POP
	JMP	RUN2
;
LIST:	CALL	GINT
	CALL	TSCR2
	CALL	SRCH
LISTL:	JC	START
	CALL	WLINE
	CALL	BREAK
	CALL	SRCH1
	JMP	LISTL
;
PRINT:	MVI	C,6	;COLUMN
;
	CALL	TEST
	DB	':'
	DB	PRNT1-$-1
	CALL	CRLF
	JMP	NXTGO
;
PRNT1:	CALL	TEST
	DB	0DH
	DB	PRNT2-$-1
	CALL	CRLF
	JMP	RUN1
;
PRNT2:	CALL	TEST
	DB	'#'
	DB	PRNT3-$-1
	CALL	EEXPR
	MOV	C,L
	JMP	PRNT4
PRNT3:	CALL	PR10
	JMP	PRNT6
PRNT4:	CALL	TEST
	DB	','
	DB	PRNT5-$-1
	CALL	TSTSC
	JMP	PRNT2
;
PRNT5:	CALL	CRLF
	JMP	ENDL
;
PRNT6:	CALL	EEXPR
	PUSH	B
	CALL	WINT
	POP	B
	JMP	PRNT4
;
GOSUB:	CALL	PSHV
	CALL	EEXPR
	PUSH	D
	CALL	SRCH
	JNZ	ERR1
	LHLD	COBJ
	PUSH	H
	LHLD	RSTCK
	PUSH	H
	LXI	H,0
	SHLD	FCNTR
	DAD	SP
	SHLD	RSTCK
	JMP	RUN2
;
RETURN:	CALL	TSCR2
	LHLD	RSTCK
	MOV	A,H
	ORA	L
	JZ	LERMS	;IF RSTACK_TOP=0 ERR
	SPHL
	POP	H
	SHLD	RSTCK
	POP	H
	SHLD	COBJ
	POP	D
	CALL	POPV
	JMP	ENDL
;
FOR:	CALL	PSHV
	CALL	LTSUB
	DCX	H
	SHLD	FCNTR
	LXI	H,KWTO-1
	JMP	NXTKW
;
FORTO:	CALL	EEXPR
	SHLD	FTOV
	LXI	H,KWSTP-1
	JMP	NXTKW
;
FSTEP:	CALL	EEXPR
	JMP	FOR0
;
FSTP1:	LXI	H,1
FOR0:	SHLD	FSTPV
	LHLD	COBJ
	SHLD	FLABL
	XCHG
	SHLD	FOBJ
	LXI	B,0AH

	LHLD	FCNTR
	XCHG
	MOV	H,B
	MOV	L,B
	DAD	SP
	DB	3EH	;<SKIP NEXT INSTRUCTION>
FOR3:	DAD	B
	MOV	A,M
	INX	H
	ORA	M
	JZ	FOR10
	MOV	A,M
	DCX	H
	CMP	D
	JNZ	FOR3
	MOV	A,M
	CMP	E
	JNZ	FOR3
	XCHG
	LXI	H,0
	DAD	SP
	MOV	B,H
	MOV	C,L
	LXI	H,0AH
	DAD	D
	CALL	TR2
	SPHL
FOR10:	LHLD	FOBJ
	XCHG
	JMP	ENDL
;
NEXT:	CALL	TSTV
	JC	LERMS
	SHLD	NCNTR
NEXT1:	PUSH	D
	XCHG
	LHLD	FCNTR
	MOV	A,H
	ORA	L
	JZ	LEMS0
	CALL	COMPR
	JZ	NEXT2
	POP	D
	CALL	POPV
	LHLD	NCNTR
	JMP	NEXT1
NEXT2:	MOV	E,M
	INX	H
	MOV	D,M	;DE OLD FOR VALUE
	LHLD	FSTPV
	PUSH	H	;HL STEP VALUE
	DAD	D
	XCHG
	LHLD	FCNTR
	MOV	M,E
	INX	H
	MOV	M,D	;FOR VAR. :=NEW VALUE
	LHLD	FTOV
	POP	PSW
	ORA	A
	JP	NEXT4
	XCHG
NEXT4:	CALL	CMINT
	POP	D
	JC	NEXT5
	LHLD	FLABL
	SHLD	COBJ
	LHLD	FOBJ
	XCHG
	JMP	ENDL
;
NEXT5:	CALL	POPV
	JMP	ENDL
;
REM:	LXI	H,0
	JMP	IFST2
;
IFSTM:	CALL	EEXPR
	MOV	A,H
	ORA	L
	JNZ	NXTGO
IFST2:	CALL	SKPL2
	JNC	RUN2
	JMP	START
;
ERRIN:	LHLD	NCNTR
	SPHL
	POP	H
	SHLD	COBJ
	POP	D
	POP	D
INPUT:	PUSH	D
	CALL	PR10
	JMP	INPT2
;
INPT1:	CALL	TSTV
	JC	INPT6
	JMP	INPT4
INPT2:	PUSH	D
	CALL	TSTV
	JC	LERMS
	LDAX	D
	MOV	C,A
	XRA	A
	STAX	D
	POP	D
	CALL	MSG
	MOV	A,C
	DCX	D
	STAX	D
;
INPT4:	PUSH	D
	XCHG
	LHLD	COBJ
	PUSH	H
	LXI	H,INPUT
	SHLD	COBJ
	LXI	H,0
	DAD	SP
	SHLD	NCNTR
	PUSH	D
	MVI	A,':'
	CALL	GETL
	LXI	D,LBUF
	CALL	EEXPR
	POP	D
	XCHG
	MOV	M,E
	INX	H
	MOV	M,D
	POP	H
	SHLD	COBJ
	POP	D
;
INPT6:	POP	PSW
	CALL	TEST
	DB	','
	DB	LTEND-$-1
	JMP	INPUT
;
CMDER:	LDAX	D
	CPI	0DH
	JZ	ENDL
;
LET:	CALL	LTSUB
	CALL	TEST
	DB	','
	DB	LTEND-$-1
	JMP	LET
LTEND:	JMP	ENDL
;
;
EEXPR:	CALL	EXPR	;EXTENDED EXP.
	PUSH H
	JMP	RST31
;
RST31:	LXI	H,ROPKW-1
	JMP	NXTKW
;
OGE:	CALL	IFEXQ
	RC
	MOV	L,A
	RET
;
ONE:	CALL	IFEXQ
	RZ
	MOV	L,A
	RET
;
OGT:	CALL	IFEXQ
	RZ
	RC
	MOV	L,A
	RET
;
OLE:	CALL	IFEXQ
	MOV	L,A
	RZ
	RC
	MOV	L,H
	RET
;
OEQ:	CALL	IFEXQ
	RNZ
	MOV	L,A
	RET
;
OLT:	CALL	IFEXQ
	RNC
	MOV	L,A
	RET
;
NOROP:	POP	H
	RET
;
IFEXQ:	MOV	A,C
	POP	H
	POP	B
	PUSH	H
	PUSH	B
	MOV	C,A
	CALL	EXPR
	XCHG
	XTHL
	CALL	CMINT
	POP	D
	LXI	H,0
	MVI	A,1
	RET
;
EXPR:	CALL	TEST
	DB	'-'
	DB	EXPR1-$-1
	LXI	H,0
	JMP	NEGA1
;
EXPR1:	CALL	TEST
	DB	'+'
	DB	EXPR3-$-1
EXPR3:	CALL	TERM
;
EXPR2:	CALL	TEST
	DB	'+'
	DB	NEGA0-$-1
	PUSH	H
	CALL	TERM
ADDDBL:	XCHG
	XTHL
	MOV	A,H
	XRA	D
	MOV	A,D
	DAD	D
	POP	D
	JM	EXPR2
	XRA	H
	JP	EXPR2
	JMP	ERROR
;
NEGA0:	CALL	TEST
	DB	'-'
	DB	EXPRT-$-1
;
NEGA1:	PUSH	H
	CALL	TERM
	CALL	TWSCP
	JMP	ADDDBL
;
TERM:	CALL	FACTR
;
MULT:	CALL	TEST
	DB	'*'
	DB	DIV-$-1
	PUSH	H
	CALL	FACTR
	MVI	B,0
	CALL	ABS
	XCHG
	XTHL
	CALL	ABS
	MOV	A,H
	ORA	A
	JZ	MULT1
	MOV	A,D
	ORA	D
	XCHG
	JNZ	ERR1
MULT1:	MOV	A,L
	LXI	H,0
	ORA	A
	JZ	TERM1
MULTL:	DAD	D
	JC	ERR1
	DCR	A
	JNZ	MULTL
	JMP	TERM1
;
DIV:	CALL	TEST
	DB	'/'
	DB	EXPRT-$-1
	PUSH	H
	CALL	FACTR
	MVI	B,0
	CALL	ABS
	XCHG
	XTHL
	CALL	ABS
	MOV	A,D
	ORA	E
	JZ	ERR1
	PUSH	B
	CALL	DIVID
	MOV	H,B
	MOV	L,C
	POP	B
TERM1:	POP	D
	MOV	A,H
	ORA	A
	JM	ERROR
	MOV	A,B
	ORA	A
	CM	TWSCP
	JMP	MULT
;
FACTR:	LXI	H,FNKW-1
	JMP	NXTKW
;
FACT2:	CALL	TSTV
	JC	FNUM
	MOV	A,M
	INX	H
	MOV	H,M
	MOV	L,A
	RET
;
FNUM:	CALL	GINT
	MOV	A,B
	ORA	A
	RNZ
;
EXPR0:	CALL	TEST
	DB	'('
	DB	EXPER-$-1
	CALL	EEXPR
	CALL	TEST
	DB	')'
	DB	EXPER-$-1
EXPRT:	RET
EXPER:	JMP	LERMS
;
RND:	CALL	EXPR0
	MOV	A,H
	ORA	A
	JM	ERROR
	ORA	L
	JZ	ERROR
	PUSH	D
	XCHG
	LHLD	RWRK
	MOV	A,L
	RAR
	XRA	L
	DAD	H
	ACI	0
	CMA
	ANI	01H
	ORA	L
	MOV	L,A
	SHLD	RWRK
	PUSH	B
	CALL	DIVID
	POP	B
	POP	D
	INX	H
	RET
;
FNABS:	CALL	EXPR0
	CALL	ABS
	MOV	A,H
	ORA	H
	JM	ERROR
	RET
;
RSIZE:	LHLD	OBTM
	PUSH	D
	XCHG
	LXI	H,VTOP
	CALL	DIFF
	POP	D
	RET
;
DIVID:	PUSH	H
	MOV	L,H
	MVI	H,0
	CALL	DIVSB
	MOV	B,C
	MOV	A,L
	POP	H
	MOV	H,A
DIVSB:	MVI	C,0FFH
DIVS1:	INR	C
	CALL	DIFF
	JNC	DIVS1
	DAD	D
	RET
;
DIFF:	MOV	A,L
	SUB	E
	MOV	L,A
	MOV	A,H
	SBB	D
	MOV	H,A
	RET
;
ABS:	MOV	A,H
	ORA	A
	RP
TWSCP:	XRA	A
	SUB	L
	MOV	L,A
	SBB	H
	SUB	L
	MOV	H,A
	MOV	A,B
	XRI	80H
	MOV	B,A
	RET
;
CMINT:	MOV	A,H
	XRA	D
	JP	CPIN1
	XCHG
CPIN1:	CALL	COMPR
	RET
;
LTSUB:	CALL	TSTV
	JC	LERMS
	PUSH	H
	CALL	TEST
	DB	'='
	DB	LTERR-$-1
	CALL	EEXPR
	MOV	B,H
	MOV	C,L
	POP	H
	MOV	M,C
	INX	H
	MOV	M,B
	RET
LTERR:	JMP	LERMS
;
ENDL:	CALL TSTSC	;TEST END OF LINE
	JMP	LERMS
;
TSTSC:	CALL	TEST
	DB	':'
	DB	TSCR1-$-1
	POP	PSW
	JMP	NXTGO
;
TSCR1:	CALL	TEST
	DB	0DH
	DB	TSRTN-$-1
	POP	PSW
	LDA	DRCT
	ORA	A
	JZ	START
	JMP	RUN1
TSRTN:	RET
;
TSCR2:	CALL	SKPBL
	CPI	0DH
	RZ
;
LERMS:	PUSH	D
LEMS0:	LXI	D,WHTMS
LEMS1:	SUB	A
	CALL	MSG
	POP	D
	LDAX	D
	PUSH	PSW
	XRA	A
	STAX	D
	LHLD	COBJ
	PUSH	H
	MOV	A,M
	INX	H
	ORA	M
	POP	D
	JZ	START
	MOV	A,M
	ORA	A
	JM	ERRIN
	CALL	WLINE
	DCX	D
	POP	PSW
	STAX	D
	XRA	A
	PUSH	D
	LXI	D,ERRQ
	CALL	MSG
	POP	D
	CALL	MSG
	JMP	START
;
ERRQ:	DB	'?'
	DB	0
;
SYSOF:	PUSH	D
SYSO1:	LXI	D,SRYMS
	JMP	LEMS1
;
SRCH:	MOV	A,H
	ORA	A
	JM	ERROR
	LXI	D,OTOP
SRCH1:	PUSH	H
	LHLD	OBTM
	DCX	H
	CALL	COMPR
	POP	H
	RC
	LDAX	D
	SUB	L
	MOV	B,A
	INX	D
	LDAX	D
	SBB	H
	JC	SKPL1
	DCX	D
	ORA	B
	RET
;
SKIPL:	INX	D
SKPL1:	INX	D
SKPL2:	LDAX	D
	CPI	0DH
	JNZ	SKPL1
	INX	D
	JMP	SRCH1
;
MSG:	MOV	B,A
MSG1:	LDAX	D
	INX	D
	CMP	B
	RZ
	CALL	PUT
	CPI	0DH
	JNZ	MSG1
	RET
;
PR10:	CALL	TEST
	DB	'"'
	DB	PR13-$-1
PR11:	CALL	MSG
	CPI	0DH
	POP	H
	JZ	RUN1
PR12:	INX	H
	INX	H
	INX	H
	PCHL
;
PR13:	CALL	TEST
	DB	''''
	DB	PR15-$-1
	MVI	A,27H
	JMP	PR11
;
;
PR15:	RET
;
WINT:	PUSH	D
	LXI	D,0AH
	PUSH	D
	MOV	B,D
	DCR	C
	CALL	ABS
	JP	WINT1
	MVI	B,'-'
	DCR	C
WINT1:	PUSH	B
WINT2:	CALL	DIVID
	MOV	A,B
	ORA	C
	JZ	WINT3
	XTHL
	DCR	L
	PUSH	H
	MOV	H,B
	MOV	L,C
	JMP	WINT2
WINT3:	POP	B
WINT4:	DCR	C
	MOV	A,C
	ORA	A
	JM	WINT5
	MVI	A,' '
	CALL	PUT
	JMP	WINT4
WINT5:	MOV	A,B
	CALL	PUT
	MOV	E,L
WINT6:	MOV	A,E
	CPI	0AH
	POP	D
	RZ
	ADI	'0'
	CALL	PUT
	JMP	WINT6
;
WLINE:	LDAX	D
	MOV	L,A
	INX	D
	LDAX	D
	MOV	H,A
	INX	D
	MVI	C,4
	CALL	WINT
	MVI	A,' '
	CALL	PUT
	XRA	A
	CALL	MSG
	RET
;
TRNSF:	CALL	COMPR
	RZ
	LDAX	D
	STAX	B
	INX	D
	INX	B
	JMP	TRNSF
;
TR2:	MOV	A,B
	SUB	D
	JNZ	TR2E
	MOV	A,C
	SUB	E
	RZ
TR2E:	DCX	D
	DCX	H
	LDAX	D
	MOV	M,A
	JMP	TR2
;
POPV:	POP	B
	POP	H
	SHLD	FCNTR
	MOV	A,H
	ORA	L
	JZ	NPOP
	POP	H
	SHLD	FSTPV
	POP	H
	SHLD	FTOV
	POP	H
	SHLD	FLABL
	POP	H
	SHLD	FOBJ
NPOP:	PUSH	B
	RET
;
PSHV:	LXI	H,MSTK
	CALL	TWSCP
	POP	B
	DAD	SP
	JNC	SYSOF
	LHLD	FCNTR
	MOV	A,H
	ORA	L
	JZ	NPSH
	LHLD	FOBJ
	PUSH	H
	LHLD	FLABL
	PUSH	H
	LHLD	FTOV
	PUSH	H
	LHLD	FSTPV
	PUSH	H
	LHLD	FCNTR
NPSH:	PUSH	H
	PUSH	B
	RET
;
;
CRLF:	MVI	A,0DH
PUT:	CALL	PUT1
	CPI	0DH
	RNZ
	PUSH	PSW
	MVI	A,0AH
	JMP	CRLF1
PUT1:	ORA	A
	RZ
	PUSH	PSW
CRLF1:	PUSH	B
	PUSH	D
	PUSH	H
	MVI	C,6
	MOV	E,A
	CALL	BDOS
	POP	H
	POP	D
	POP	B
	POP	PSW
	RET
;
BREAK:	PUSH	B
	PUSH	D
	PUSH	H
	MVI	C,06H
	MVI	E,0FFH
	CALL	BDOS
	POP	H
	POP	D
	POP	B
	ORA	A
	RZ
	CPI	3	;CTRL_C
	JZ	START
	CPI	13H	;CTRL_S
	RNZ
;
GET:	PUSH	B
	PUSH	D
	PUSH	H
G1:	MVI	C,6
	MVI	E,0FFH
	CALL	BDOS
	ORA	A
	JZ	G1
	POP	H
	POP	D
	POP	B
	CPI	3
	JZ	START
	RET
;
GETL:	CALL	PUT
	LXI	D,LBUF
GETL1:	CALL	GET
	CPI	back$spc	;BACK-SPACE
	JZ	RUB
	CPI	18H	;CAN
	JZ	CAN
	CALL	PUT
	STAX	D
	INX	D
	CPI	0DH
	RZ		;CRLF & RET
	MOV	A,E
	CPI	7FH	;BUF FULL?
	JNZ	GETL1
	MVI	A,7	;BELL
	CALL	PUT
;
RUB:	MOV	A,E
	CPI	LBUF AND 0FFH
	JZ	CAN1
	MVI	A,back$spc
	CALL	PUT
	DCX	D
	JMP	GETL1
;
CAN:	MVI	A,'\'
	CALL	PUT
CAN1:	CALL	CRLF
	MVI	A,'>'
	JMP	GETL
;
;
INIT:	LXI	D,INIMSG
	XRA	A
	CALL	MSG
	RET
;
INIMSG:
	DB	' Palo Alto'
	DB	' TINY BASIC'
	DB	0Dh
;
COBJ	DS	2
RSTCK	DS	2
NCNTR	DS	2
FCNTR	DS	2
FSTPV	DS	2
FTOV	DS	2
FLABL	DS	2
FOBJ	DS	2
RWRK	DS	2
OBTM	DS	2
DRCT	DS	1
	ORG	($ AND 0FF00H)+100H
LBUF	DS	256
;
OTOP	equ	$	;basic text starts here
;
	END
